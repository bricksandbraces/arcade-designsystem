@import "../prefix.pcss";
@import "../colors.pcss";
@import "../theme.pcss";

.$(prefix)--grid {
  &--example {
    padding: 1rem;
    border: 0.0625rem dashed $purple-40;
    background-color: $purple-10;
    color: $white;
  }

  &--container {
    display: grid;
    grid-template-rows: auto;
    max-width: 99rem;
    margin-right: auto;
    margin-left: auto;

    & > div > div {
      padding-right: 1rem;
      padding-left: 1rem;
    }

    &-no-gutter__left > div > div {
      padding-right: 1rem;
      padding-left: 0;
    }

    &-no-gutter__right > div > div {
      padding-right: 0;
      padding-left: 1rem;
    }

    &-no-gutter > div > div {
      padding-right: 0;
      padding-left: 0;
    }

    &-no-gutter {
      padding-right: 0;
      padding-left: 0;
    }
  }

  &--fullwidth {
    max-width: unset;
  }
}

@each $i in 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 {
  .$(prefix)--grid--col-$(i) {
    grid-column: span $i;

    &__offset-1 {
      grid-column: 2 / span $i;
    }
    &__offset-2 {
      grid-column: 3 / span $i;
    }
    &__offset-3 {
      grid-column: 4 / span $i;
    }
    &__offset-4 {
      grid-column: 5 / span $i;
    }
    &__offset-5 {
      grid-column: 6 / span $i;
    }
    &__offset-6 {
      grid-column: 7 / span $i;
    }
    &__offset-7 {
      grid-column: 8 / span $i;
    }
    &__offset-8 {
      grid-column: 9 / span $i;
    }
    &__offset-9 {
      grid-column: 10 / span $i;
    }
    &__offset-10 {
      grid-column: 11 / span $i;
    }
    &__offset-11 {
      grid-column: 12 / span $i;
    }
    &__offset-12 {
      grid-column: 13 / span $i;
    }
    &__offset-13 {
      grid-column: 14 / span $i;
    }
    &__offset-14 {
      grid-column: 15 / span $i;
    }
    &__offset-15 {
      grid-column: 16 / span $i;
    }
  }
}

/* < md */
@media screen and (max-width: $breakpoint-md) {
  .$(prefix)--grid--container {
    grid-template-columns: repeat(4, minmax(auto, 25%));
  }

  .$(prefix)--grid--col-sm__1 {
    grid-column: span 1;

    &__offset-1 {
      grid-column: 2 / span 1;
    }
    &__offset-2 {
      grid-column: 3 / span 1;
    }
    &__offset-3 {
      grid-column: 4 / span 1;
    }
  }

  .$(prefix)--grid--col-sm__2 {
    grid-column: span 2;

    &__offset-1 {
      grid-column: 2 / span 2;
    }
    &__offset-2 {
      grid-column: 3 / span 2;
    }
  }

  .$(prefix)--grid--col-sm__3 {
    grid-column: span 3;

    &__offset-1 {
      grid-column: 2 / span 3;
    }
  }

  .$(prefix)--grid--col-sm__4 {
    grid-column: span 4;
  }
}

/* md */
@media screen and (min-width: $breakpoint-md) and (max-width: $breakpoint-lg) {
  .$(prefix)--grid--container {
    grid-template-columns: repeat(8, minmax(auto, 12.5%));
  }

  .$(prefix)--grid--col-md__1 {
    grid-column: span 1;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8) {
      &__offset-$(j) {
        grid-column: $k / span 1;
      }
    }
  }

  .$(prefix)--grid--col-md__2 {
    grid-column: span 2;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7) {
      &__offset-$(j) {
        grid-column: $k / span 2;
      }
    }
  }

  .$(prefix)--grid--col-md__3 {
    grid-column: span 3;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6) {
      &__offset-$(j) {
        grid-column: $k / span 3;
      }
    }
  }

  .$(prefix)--grid--col-md__4 {
    grid-column: span 4;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5) {
      &__offset-$(j) {
        grid-column: $k / span 4;
      }
    }
  }

  .$(prefix)--grid--col-md__5 {
    grid-column: span 5;

    @each $j, $k in (1, 2), (2, 3), (3, 4) {
      &__offset-$(j) {
        grid-column: $k / span 5;
      }
    }
  }

  .$(prefix)--grid--col-md__6 {
    grid-column: span 6;

    @each $j, $k in (1, 2), (2, 3) {
      &__offset-$(j) {
        grid-column: $k / span 6;
      }
    }
  }

  .$(prefix)--grid--col-md__7 {
    grid-column: span 7;

    &__offset-1 {
      grid-column: 2 / span 7;
    }
  }

  .$(prefix)--grid--col-md__8 {
    grid-column: span 8;
  }
}

/* lg */
@media screen and (min-width: $breakpoint-lg) and (max-width: $breakpoint-xlg) {
  .$(prefix)--grid--container {
    grid-template-columns: repeat(16, minmax(auto, 6.25%));
  }

  .$(prefix)--grid--col-lg__1 {
    grid-column: span 1;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8),
      (8, 9), (9, 10), (10, 11), (11, 12), (12, 13), (13, 14), (14, 15),
      (15, 16)
    {
      &__offset-$(j) {
        grid-column: $k / span 1;
      }
    }
  }

  .$(prefix)--grid--col-lg__2 {
    grid-column: span 2;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8),
      (8, 9), (9, 10), (10, 11), (11, 12), (12, 13), (13, 14), (14, 15)
    {
      &__offset-$(j) {
        grid-column: $k / span 2;
      }
    }
  }

  .$(prefix)--grid--col-lg__3 {
    grid-column: span 3;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8),
      (8, 9), (9, 10), (10, 11), (11, 12), (12, 13), (13, 14)
    {
      &__offset-$(j) {
        grid-column: $k / span 3;
      }
    }
  }

  .$(prefix)--grid--col-lg__4 {
    grid-column: span 4;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8),
      (8, 9), (9, 10), (10, 11), (11, 12), (12, 13)
    {
      &__offset-$(j) {
        grid-column: $k / span 4;
      }
    }
  }

  .$(prefix)--grid--col-lg__5 {
    grid-column: span 5;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8),
      (8, 9), (9, 10), (10, 11), (11, 12)
    {
      &__offset-$(j) {
        grid-column: $k / span 5;
      }
    }
  }

  .$(prefix)--grid--col-lg__6 {
    grid-column: span 6;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8),
      (8, 9), (9, 10), (10, 11)
    {
      &__offset-$(j) {
        grid-column: $k / span 6;
      }
    }
  }

  .$(prefix)--grid--col-lg__7 {
    grid-column: span 7;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8),
      (8, 9), (9, 10)
    {
      &__offset-$(j) {
        grid-column: $k / span 7;
      }
    }
  }

  .$(prefix)--grid--col-lg__8 {
    grid-column: span 8;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8),
      (8, 9)
    {
      &__offset-$(j) {
        grid-column: $k / span 8;
      }
    }
  }

  .$(prefix)--grid--col-lg__9 {
    grid-column: span 9;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8) {
      &__offset-$(j) {
        grid-column: $k / span 9;
      }
    }
  }

  .$(prefix)--grid--col-lg__10 {
    grid-column: span 10;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7) {
      &__offset-$(j) {
        grid-column: $k / span 10;
      }
    }
  }

  .$(prefix)--grid--col-lg__11 {
    grid-column: span 11;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6) {
      &__offset-$(j) {
        grid-column: $k / span 11;
      }
    }
  }

  .$(prefix)--grid--col-lg__12 {
    grid-column: span 12;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5) {
      &__offset-$(j) {
        grid-column: $k / span 12;
      }
    }
  }

  .$(prefix)--grid--col-lg__13 {
    grid-column: span 13;

    @each $j, $k in (1, 2), (2, 3), (3, 4) {
      &__offset-$(j) {
        grid-column: $k / span 13;
      }
    }
  }

  .$(prefix)--grid--col-lg__14 {
    grid-column: span 14;

    @each $j, $k in (1, 2), (2, 3) {
      &__offset-$(j) {
        grid-column: $k / span 14;
      }
    }
  }

  .$(prefix)--grid--col-lg__15 {
    grid-column: span 15;

    &__offset-1 {
      grid-column: 2 / span 15;
    }
  }

  .$(prefix)--grid--col-lg__16 {
    grid-column: span 16;
  }
}

/* xlg */
@media screen and (min-width: $breakpoint-xlg) {
  .$(prefix)--grid--container {
    grid-template-columns: repeat(16, minmax(auto, 6.25%));
  }

  .$(prefix)--grid--col-xlg__1 {
    grid-column: span 1;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8),
      (8, 9), (9, 10), (10, 11), (11, 12), (12, 13), (13, 14), (14, 15),
      (15, 16)
    {
      &__offset-$(j) {
        grid-column: $k / span 1;
      }
    }
  }

  .$(prefix)--grid--col-xlg__2 {
    grid-column: span 2;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8),
      (8, 9), (9, 10), (10, 11), (11, 12), (12, 13), (13, 14), (14, 15)
    {
      &__offset-$(j) {
        grid-column: $k / span 2;
      }
    }
  }

  .$(prefix)--grid--col-xlg__3 {
    grid-column: span 3;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8),
      (8, 9), (9, 10), (10, 11), (11, 12), (12, 13), (13, 14)
    {
      &__offset-$(j) {
        grid-column: $k / span 3;
      }
    }
  }

  .$(prefix)--grid--col-xlg__4 {
    grid-column: span 4;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8),
      (8, 9), (9, 10), (10, 11), (11, 12), (12, 13)
    {
      &__offset-$(j) {
        grid-column: $k / span 4;
      }
    }
  }

  .$(prefix)--grid--col-xlg__5 {
    grid-column: span 5;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8),
      (8, 9), (9, 10), (10, 11), (11, 12)
    {
      &__offset-$(j) {
        grid-column: $k / span 5;
      }
    }
  }

  .$(prefix)--grid--col-xlg__6 {
    grid-column: span 6;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8),
      (8, 9), (9, 10), (10, 11)
    {
      &__offset-$(j) {
        grid-column: $k / span 6;
      }
    }
  }

  .$(prefix)--grid--col-xlg__7 {
    grid-column: span 7;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8),
      (8, 9), (9, 10)
    {
      &__offset-$(j) {
        grid-column: $k / span 7;
      }
    }
  }

  .$(prefix)--grid--col-xlg__8 {
    grid-column: span 8;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8),
      (8, 9)
    {
      &__offset-$(j) {
        grid-column: $k / span 8;
      }
    }
  }

  .$(prefix)--grid--col-xlg__9 {
    grid-column: span 9;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8) {
      &__offset-$(j) {
        grid-column: $k / span 9;
      }
    }
  }

  .$(prefix)--grid--col-xlg__10 {
    grid-column: span 10;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7) {
      &__offset-$(j) {
        grid-column: $k / span 10;
      }
    }
  }

  .$(prefix)--grid--col-xlg__11 {
    grid-column: span 11;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5), (5, 6) {
      &__offset-$(j) {
        grid-column: $k / span 11;
      }
    }
  }

  .$(prefix)--grid--col-xlg__12 {
    grid-column: span 12;

    @each $j, $k in (1, 2), (2, 3), (3, 4), (4, 5) {
      &__offset-$(j) {
        grid-column: $k / span 12;
      }
    }
  }

  .$(prefix)--grid--col-xlg__13 {
    grid-column: span 13;

    @each $j, $k in (1, 2), (2, 3), (3, 4) {
      &__offset-$(j) {
        grid-column: $k / span 13;
      }
    }
  }

  .$(prefix)--grid--col-xlg__14 {
    grid-column: span 14;

    @each $j, $k in (1, 2), (2, 3) {
      &__offset-$(j) {
        grid-column: $k / span 14;
      }
    }
  }

  .$(prefix)--grid--col-xlg__15 {
    grid-column: span 15;

    &__offset-1 {
      grid-column: 2 / span 15;
    }
  }

  .$(prefix)--grid--col-xlg__16 {
    grid-column: span 16;
  }
}

/* < md */
@media screen and (max-width: $breakpoint-md) {
  .$(prefix)--grid--container.$(prefix)--grid--container-no-gutter {
    padding-right: 0;
    padding-left: 0;
  }

  .$(prefix)--grid--container.$(prefix)--grid--container-no-gutter__left {
    padding-right: 0;
    padding-left: 0;
  }

  .$(prefix)--grid--container {
    padding-right: 1rem;
    padding-left: 1rem;
  }
}

/* > md */
@media screen and (min-width: $breakpoint-md) {
  .$(prefix)--grid--container.$(prefix)--grid--container-no-gutter {
    padding-right: 1rem;
    padding-left: 1rem;
  }

  .$(prefix)--grid--container.$(prefix)--grid--container-no-gutter__left {
    padding-right: 1rem;
    padding-left: 1rem;
  }

  .$(prefix)--grid--container {
    padding-right: 2rem;
    padding-left: 2rem;
  }
}

/* > max */
@media screen and (min-width: $breakpoint-max) {
  .$(prefix)--grid--container.$(prefix)--grid--container-no-gutter {
    padding-right: 1.5rem;
    padding-left: 1.5rem;
  }

  .$(prefix)--grid--container.$(prefix)--grid--container-no-gutter__left {
    padding-right: 1.5rem;
    padding-left: 1.5rem;
  }

  .$(prefix)--grid--container {
    padding-right: 2.5rem;
    padding-left: 2.5rem;
  }
}

/* span-16 */

.$(prefix)--grid--container[data-columncount="1"] > .$(prefix)--grid--col {
  grid-column: span 16;
}

/* span-8 */

@each $i in 2, 3 {
  .$(prefix)--grid--container[data-columncount="$(i)"] > .$(prefix)--grid--col {
    grid-column: span 8;
  }
}

/* span-4 */

@each $i in 4, 5, 6, 7 {
  .$(prefix)--grid--container[data-columncount="$(i)"] > .$(prefix)--grid--col {
    grid-column: span 4;
  }
}

/* span-2 */

@each $i in 8, 9, 10, 11, 12, 13, 14, 15 {
  .$(prefix)--grid--container[data-columncount="$(i)"] > .$(prefix)--grid--col {
    grid-column: span 2;
  }
}

/* span-1 */

.$(prefix)--grid--container[data-columncount="16"] > .$(prefix)--grid--col {
  grid-column: span 1;
}
