@import "../prefix.pcss";
@import "../typography.pcss";
@import "../theme.pcss";

.$(prefix) {
  &--textarea {
    display: inline-flex;
    flex-flow: column wrap;
    width: calc($size--container-08 * 2);

    &-light {
      & > .$(prefix)--textarea-input__container > .$(prefix)--textarea-input {
        border-color: $color--border-light;
        background-color: $color--background-light;
      }

      &.$(prefix)--textarea-readonly
        > .$(prefix)--textarea-input__container
        > .$(prefix)--textarea-input {
        border-color: $color--readonly;
        background-color: $color--readonly;
      }

      &.$(prefix)--textarea-disabled
        > .$(prefix)--textarea-input__container
        > .$(prefix)--textarea-input {
        border-color: $color--disabled;
        background-color: $color--disabled;
      }
    }

    &-top {
      display: inline-flex;
      justify-content: space-between;
    }

    &-charcounter {
      @mixin type--label;

      color: $color--font-text-03;

      &__exceeded {
        color: $color--font-danger;
      }
    }

    &-input {
      @mixin type--body-02;

      height: $size--container-07;
      padding: $size--spacing-05;
      transition: border-color $transition--app-01;
      border: 0.0625rem solid $color--border;
      border-radius: $component--radius-default;
      outline: 0;
      background-color: $color--background;
      color: $color--font-text-01;

      &:focus {
        border-color: $color--focus;

        &::placeholder {
          transform: translateX(0.125rem);
          opacity: 0;
        }
      }

      &::placeholder {
        transition: transform $transition--app-01, opacity $transition--app-01;
        color: $color--font-placeholder;
      }

      &__container {
        display: inline-flex;
        position: relative;
        flex-flow: column;
      }

      &[disabled] {
        border-color: $color--disabled;
        background-color: $color--disabled;
        color: $color--font-disabled;
        cursor: not-allowed;

        &::placeholder {
          color: $color--font-disabled;
        }

        & + label {
          color: $color--font-disabled;
        }
      }

      &[readonly] {
        border-color: $color--readonly;
        background-color: $color--readonly;
        color: $color--font-readonly;

        &::placeholder {
          color: $color--font-readonly;
        }

        & + label {
          color: $color--font-readonly;
        }
      }
    }

    &-error {
      border-color: $color--danger;

      &__text {
        @mixin type--label;

        display: flex;
        align-items: center;
        margin-top: $size--spacing-02;
        color: $color--font-danger;

        & > svg {
          margin-right: $size--spacing-02;
        }
      }
    }

    &-warning {
      border-color: $color--warning;

      &__text {
        @mixin type--label;

        display: flex;
        align-items: center;
        margin-top: $size--spacing-02;
        color: $color--font-warning;

        & > svg {
          margin-right: $size--spacing-02;
        }
      }
    }
  }
  &--textarea.$(prefix)--skeleton {
    display: inline-flex;
    position: unset;
    flex-flow: column;
    align-items: flex-start;
    justify-content: flex-start;
    overflow: unset;
    border-color: transparent;
    background-color: transparent;
    box-shadow: none;

    & > .$(prefix)--skeleton-animated {
      justify-content: flex-end;
      padding: 0 $size--spacing-05;
      border-radius: $component--radius-default;

      & > svg {
        transform: translateX(-0.0625rem);
        stroke: $color--skeleton-03;
      }
    }

    & > .$(prefix)--skeleton-container {
      align-items: flex-start;
    }
  }
}
